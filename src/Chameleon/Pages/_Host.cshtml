@page "/"
@namespace Chameleon.Pages
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="en" data-theme="dark">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Chameleon</title>
    <base href="~/" />
    <link href="~/css/site.css" rel="stylesheet" />
    <style>
        body {
            font-size: large;
        }
    </style>
    <script>

        function CSMethod() {
            //     DotNet.invokeMethodAsync("Chameleon", "ChangeSideBarCssClass")

        }

        window.plum = (selectedTheme) => {
            var selector = document.getElementsByTagName('html')[0];
            selector.setAttribute('data-theme', selectedTheme);
            localStorage.setItem("theme", selectedTheme)
        }
        plum(localStorage.getItem("theme"));
        console.log("h");



                        //window.OnClickOutside = (e) => {
                        //    console.log(e)
                        //    var parent = document.getElementById('sideBar');
                        //    if (parent) {
                        //        console.log(parent)
                        //        var result = parent.compareDocumentPosition(e.target);
                        //        console.log(result)
                        //        if (result) {
                        //            console.log("1:" + result)
                        //            if (parent.classList.contains("active")) {
                        //                var p = document.getElementsByClassName("toggle-btn")[0];
                        //                console.log(e.target)
                        //                console.log("node:" + e.target.nodeName)
                        //                var r = p.compareDocumentPosition(e.target);
                        //                console.log(result)
                        //                if (r && e.target.nodeName!="SELECT" ) {
                        //                    console.log("calling from 2 ")
                        //                    CSMethod();
                        //                }
                        //            }
                        //        }
                        //    }
                        //}


                      ///  window.addEventListener("click", (evt) => { OnClickOutside(evt); }, false);


    </script>
    <script src="~/js/my_lib.js"></script>
    <script src="_content/BlazorInputFile/inputfile.js"></script>
</head>
<body>
    <component type="typeof(App)" render-mode="ServerPrerendered" />

    <div id="blazor-error-ui">
        <environment include="Staging,Production">
            An error has occurred. This application may no longer respond until reloaded.
        </environment>
        <environment include="Development">
            An unhandled exception has occurred. See browser dev tools for details.
        </environment>
        <a href="" class="reload">Reload</a>
        <a class="dismiss">🗙</a>
    </div>

    <script src="_framework/blazor.server.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js@2.9.4/dist/Chart.min.js"></script>
    <script src="_content/ChartJs.Blazor.Fork/ChartJsBlazorInterop.js"></script>
</body>
</html>
