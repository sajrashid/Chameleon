@page "/sideBar"
@namespace Chameleon.Pages
@inject IJSRuntime JsRuntime;

<div id="sideBar" class="@(( Left ? "" : "active" ) + " sidebar")">
    <div class="toggle-btn" @onclick="ChangeSideBarCssClass">
        <span></span>
        <span></span>
        <span></span>
    </div>
    <div class="list">
        <div class="item">Home</div>
        <div class="item">About us</div>
        <div class="item">Gallery</div>
        <div class="item">Contact us</div>
        <div class="item group ">
            <a href="Settings" class="p-3  h-full w-full h block hover:bg-neutral-focus">
                <span class="align-middle inline-block p-0">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z" />
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
                    </svg>
                </span>
                <span class="d-inline-block  p-1 m-0">
                    Settings
                </span>
            </a>
        </div>
        <div>
            <ThemeSelector />
        </div>
    </div>
</div>
<div class="overlay @(( IsOverLay ? "overlayOff" : "overlayOn") + " overlay")" @onclick="ChangeOverLayCssClass">
    on
</div>


@code {

    //  private static Action action;
    private  bool Left { get; set; } = true;
    private  bool IsOverLay { get; set; } = true;

    //protected override void OnInitialized()
    //{
    //    action = UpdateCss;
    //}

    private void ChangeSideBarCssClass()
    {
        Left = !Left;
        IsOverLay = !IsOverLay;
        StateHasChanged();
    }


    //[JSInvokable]
    //public static void ChangeSideBarCssClass()
    //{
    //    action.Invoke();

    //}



    public void ChangeOverLayCssClass(MouseEventArgs e)
    {

        InvokeAsync(() => Left = !Left);
        IsOverLay = !IsOverLay;

    }
}