@using Blazor.ECharts.Options
@using Blazor.ECharts.Options.Enum
@using L = Blazor.ECharts.Options.Series.Line

<div class="shadow-md bg-base-200">
    <div class="bg-base-200 text-base-content bg-neutral text-neutral-content">
        <div class="shadow-md bg-base-300 align-bottom  h-12 text-lg cursor-pointer">

            <span class="align-middle inline-block p-2 pl-3">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 18.657A8 8 0 016.343 7.343S7 9 9 10c0-2 .5-5 2.986-7C14 5 16.09 5.777 17.656 7.343A7.975 7.975 0 0120 13a7.975 7.975 0 01-2.343 5.657z" />
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.879 16.121A3 3 0 1012.015 11L11 14H9c0 .768.293 1.536.879 2.121z" />
                </svg>
            </span>
            <span class="align-middle inline-block">Thermals</span>
            <span @onclick="ExpandClick" class="@(( RotateCss ? "transform rotate-180" :"") + " transition ease-out duration-200 align-middle inline-block p-2 pr-3 float-right")">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path></svg>
            </span>
        </div>
        <div class="@(( ExpandedCss ? "expandPanel" : "") + " shrunkPanel pl-3 pr-3 pb-1")">
            <div class="p-1 mt-2 mb-1 mainpanel">
                <div class="chart-container">
                    <ELine Option="@Option1" Class="chart-normal"></ELine>
                    <ELine Option="@Option2" Class="chart-normal"></ELine>
                    <ELine Option="@Option3" Class="chart-normal"></ELine>
                </div>

            </div>
        </div>
    </div>
</div>

@code {
    private bool ExpandedCss { get; set; } = true;
    private bool RotateCss { get; set; } = false;
    private EChartsOption<L.Line> Option1;
    private EChartsOption<L.Line> Option2;
    private EChartsOption<L.Line> Option3;

    protected override void OnInitialized()
    {
        base.OnInitialized();

        Option1 = new()
        {
            Title = new()
            {
                Text = " Line Chart "
            },
            YAxis = new()
            {
                new()
                {
                    Type = AxisType.Value
                }
            },
            XAxis = new()
            {
                new()
                {
                    Type = AxisType.Category,
                    Data = new[] { "Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun" }
                }
            },
            Series = new()
            {
                new L.Line()
                {
                    Type = "line",
                    Data = new[] { 820, 932, 901, 934, 1290, 1330, 1320 }
                }
            }
        };
        Option2 = new()
        {
            Title = new()
            {
                Text = " Area Map "
            },
            YAxis = new()
            {
                new()
                {
                    Type = AxisType.Value
                }
            },
            XAxis = new()
            {
                new()
                {
                    Type = AxisType.Category,
                    Data = new[] { "Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun" },
                    BoundaryGap = false
                }
            },
            Series = new()
            {
                new L.Line()
                {
                    Type = "line",
                    Data = new[] { 820, 932, 901, 934, 1290, 1330, 1320 },
                    AreaStyle = new AreaStyle()
                }
            }
        };
        Option3 = new()
        {
            Title = new()
            {
                Text = " Smooth line chart "
            },
            YAxis = new()
            {
                new()
                {
                    Type = AxisType.Value
                }
            },
            XAxis = new()
            {
                new()
                {
                    Type = AxisType.Category,
                    Data = new[] { "Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun" }
                }
            },
            Series = new()
            {
                new L.Line()
                {
                    Type = "line",
                    Data = new[] { 820, 932, 901, 934, 1290, 1330, 1320 },
                    Smooth = true
                }
            }
        };
    }
    private void ExpandClick()
    {
        ExpandedCss = !ExpandedCss;
        RotateCss = !RotateCss;
    }
}